{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"bundle": {
			"(loading...)/Prefix displayed for hover entries while the server is still loading": "(завантаження...)",
			"...1 additional file not shown": "...1 додатковий файл не відображений",
			"...{0} additional files not shown": "...не відображено додаткових файлів: {0}",
			"1 implementation": "1 реалізація",
			"1 reference": "1 посилання",
			"Acquiring typings definitions for IntelliSense./Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Отримання визначень typings для IntelliSense.",
			"Acquiring typings.../Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized": "Отримання typings...",
			"Add all missing imports": "Додати всі відсутні імпорти",
			"Allow": "Дозволити",
			"Always": "Завжди",
			"An error occurred while renaming file": "Сталася помилка під час перейменування файлу",
			"Checking for update of JS/TS imports": "Перевірка оновлення імпортування JS/TS",
			"Configure Excludes": "Налаштувати виключення",
			"Configure jsconfig": "Налаштувати jsconfig",
			"Configure jsconfig.json": "Налаштувати jsconfig.json",
			"Configure tsconfig": "Налаштувати tsconfig",
			"Configure tsconfig.json": "Налаштувати tsconfig.json",
			"Could not apply refactoring": "Не вдалося застосувати рефакторинг",
			"Could not detect a Node installation to run TS Server.": "Не вдалося виявити встановлення Node для запуску TS Server.",
			"Could not determine TypeScript or JavaScript project": "Не вдалося визначити проект TypeScript або JavaScript.",
			"Could not determine TypeScript or JavaScript project. Unsupported file type": "Не вдалося визначити проект TypeScript або JavaScript. Непідтримуваний тип файлу",
			"Could not determine references": "Не вдалося визначити посилання.",
			"Could not install typings files for JavaScript language features. Please ensure that NPM is installed, or configure 'typescript.npm' in your user settings. Alternatively, check the [documentation]({0}) to learn more.": "Не вдалося встановити файли типізації для функцій мови JavaScript. Переконайтеся, що встановлено NPM або налаштуйте 'typescript.npm' у налаштуваннях користувача. Альтернативно, перевірте [документацію]({0}), щоб дізнатися більше.",
			"Could not load the TypeScript version at this path": "Не вдалося завантажити версію TypeScript за цим шляхом",
			"Could not open TS Server log file": "Не вдалося відкрити файл журналу сервера TS",
			"Disable logging": "Вимкнути ведення журналу",
			"Disables semantic checking in a JavaScript file. Must be at the top of a file.": "Вимикає семантичну перевірку в файлі JavaScript. Має бути на початку файлу.",
			"Dismiss": "Відхилити",
			"Don't Show Again": "Більше не показувати",
			"Don't show again": "Більше не показувати",
			"Enable logging and restart TS server": "Увімкнути ведення журналу та перезапустити TS сервер",
			"Enables semantic checking in a JavaScript file. Must be at the top of a file.": "Увімкнути семантичну перевірку в файлі JavaScript. Має бути на початку файлу.",
			"Enter file path": "Введіть шлях до файлу",
			"Enter new file path...": "Введіть новий шлях до файлу...",
			"Extract to constant": "Виділити в константу",
			"Extract to function": "Виділити в функцію",
			"Failed to resolve {0} as module": "Не вдалося вирішити {0} як модуль",
			"Fetching data for better TypeScript IntelliSense": "Отримання даних для кращого розуміння TypeScript",
			"File is not part of a JavaScript project. View the [jsconfig.json documentation]({0}) to learn more.": "Файл не є частиною проекту JavaScript. Перегляньте [документацію jsconfig.json] ({0}), щоб дізнатися більше.",
			"File is not part of a TypeScript project. View the [tsconfig.json documentation]({0}) to learn more.": "Файл не є частиною проекту TypeScript. Перегляньте [документацію tsconfig.json] ({0}), щоб дізнатися більше.",
			"File is not part opened folders": "Файл не є частиною відкритих папок",
			"Find file references failed. No resource provided.": "Не вдалося знайти посилання на файл. Ресурс не надано.",
			"Find file references failed. Requires TypeScript 4.2+.": "Не вдалося знайти посилання на файл. Потрібен TypeScript 4.2+.",
			"Find file references failed. Unknown file type.": "Не вдалося знайти посилання на файл. Невідомий тип файлу.",
			"Find file references failed. Unsupported file type.": "Не вдалося знайти посилання на файл. Непідтримуваний тип файлу.",
			"Finding file references": "Пошук посилань на файл",
			"Finding source definitions": "Пошук визначень джерела",
			"Fix all fixable JS/TS issues": "Виправити всі виправлені проблеми JS/TS",
			"Follow link": "Перейти за посиланням",
			"Go to Source Definition failed. No resource provided.": "Не вдалося перейти до визначення джерела. Ресурс не надано.",
			"Go to Source Definition failed. Requires TypeScript 4.7+.": "Не вдалося перейти до визначення джерела. Потрібен TypeScript 4.7+.",
			"Go to Source Definition failed. Unknown file type.": "Не вдалося перейти до визначення джерела. Невідомий тип файлу.",
			"Go to Source Definition failed. Unsupported file type.": "Не вдалося перейти до визначення джерела. Непідтримуваний тип файлу.",
			"Initializing JS/TS language features": "Ініціалізація функцій мови JS/TS",
			"JS/TS IntelliSense Status": "Стан розуміння JS/TS",
			"JSDoc comment": "Коментар JSDoc",
			"Learn More": "Дізнатися більше",
			"Learn more about JS/TS refactorings": "Дізнайтеся більше про переробки JS/TS",
			"Learn more about managing TypeScript versions": "Дізнайтеся більше про керування версіями TypeScript",
			"Loading IntelliSense status": "Завантаження стану розуміння",
			"Move to File": "Перемістити до файлу",
			"Never": "Ніколи",
			"Never in this Workspace": "Ніколи в цій робочій області",
			"No": "Ні",
			"No jsconfig": "Немає jsconfig",
			"No opened folders": "Немає відкритих папок",
			"No source definitions found.": "Не знайдено визначень джерела.",
			"No tsconfig": "Немає tsconfig",
			"Not now": "Не зараз",
			"Open config file": "Відкрити файл конфігурації",
			"Organize Imports": "Організувати імпорти",
			"Organize Imports failed. No resource provided.": "Не вдалося організувати імпорти. Ресурс не надано.",
			"Organize Imports failed. Unknown file type.": "Не вдалося організувати імпорти. Невідомий тип файлу.",
			"Partial Mode": "Частковий режим",
			"Please open a folder in VS Code to use a TypeScript or JavaScript project": "Будь ласка, відкрийте папку в VS Code, щоб використовувати проект на TypeScript або JavaScript.",
			"Please update your TypeScript version": "Будь ласка, оновіть вашу версію TypeScript",
			"Project Wide IntelliSense not available": "Інтелектуальне виведення типів для всього проекту недоступне",
			"Remove Unused Imports": "Видалити невикористані імпорти",
			"Remove all unused code": "Видалити весь невикористаний код",
			"Report Issue": "Повідомити про проблему",
			"Select Version": "Вибрати версію",
			"Select code action to apply": "Виберіть дію для застосування",
			"Select existing file...": "Виберіть існуючий файл...",
			"Select move destination": "Виберіть пункт призначення для переміщення",
			"Select the TypeScript version used for JavaScript and TypeScript language features": "Виберіть версію TypeScript, яку використовувати для функцій JavaScript та TypeScript.",
			"Sort Imports": "Сортувати імпорти",
			"Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.": "Пригнічує помилки @ts-check на наступному рядку файлу, очікуючи, що принаймні одна з них існує.",
			"Suppresses @ts-check errors on the next line of a file.": "Пригнічує помилки @ts-check на наступному рядку файлу.",
			"TS Server has not started logging.": "Сервер TS не розпочав ведення журналу.",
			"TS Server logging is currently enabled which may impact performance.": "В даний момент включено ведення журналу сервера TS, що може вплинути на продуктивність.",
			"TS Server logging is off. Please set 'typescript.tsserver.log' and restart the TS server to enable logging": "Ведення журналу TS Server вимкнено. Будь ласка, встановіть 'typescript.tsserver.log' і перезапустіть сервер TS, щоб увімкнути ведення журналу",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.": "Служба мови JS/TS аварійно завершила роботу 5 разів за останні 5 хвилин.",
			"The JS/TS language service crashed 5 times in the last 5 Minutes.\nThis may be caused by a plugin contributed by one of these extensions: {0}\nPlease try disabling these extensions before filing an issue against VS Code.": "Служба мови JS/TS аварійно завершила роботу 5 разів за останні 5 хвилин.\nЦе може бути викликано плагіном, наданим одним з цих розширень: {0}\nСпробуйте вимкнути ці розширення перед поданням заявки на проблему до VS Code.",
			"The JS/TS language service crashed.": "Служба мови JS/TS аварійно завершила роботу.",
			"The JS/TS language service crashed.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Служба мови JS/TS аварійно завершила роботу.\nЦе може бути викликано плагіном, наданим одним з цих розширень: {0}.\nСпробуйте вимкнути ці розширення перед поданням заявки на проблему до VS Code.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.": "Служба мови JS/TS негайно аварійно завершила роботу 5 разів. Служба не буде перезапущена.",
			"The JS/TS language service immediately crashed 5 times. The service will not be restarted.\nThis may be caused by a plugin contributed by one of these extensions: {0}.\nPlease try disabling these extensions before filing an issue against VS Code.": "Служба мови JS/TS негайно аварійно завершила роботу 5 разів. Служба не буде перезапущена.\nЦе може бути викликано плагіном, наданим одним з цих розширень: {0}.\nСпробуйте вимкнути ці розширення перед поданням заявки на проблему до VS Code.",
			"The current selection cannot be extracted": "Поточний вибір не може бути витягнутий",
			"The path {0} doesn't point to a valid Node installation to run TS Server. Falling back to bundled Node.": "Шлях {0} не вказує на дійсну установку Node для запуску TS Server. Повернення до вбудованого пакету Node.",
			"The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.": "Шлях {0} не вказує на дійсну установку tsserver. Повернення до вбудованої версії TypeScript.",
			"The workspace is using an old version of TypeScript ({0}).\n\nBefore reporting an issue, please update the workspace to use TypeScript {1} or newer to make sure the bug has not already been fixed.": "Робоча область використовує стару версію TypeScript ({0}).\n\nПеред тим як повідомити про проблему, оновіть робочу область, щоб використовувати TypeScript {1} або новішу версію, щоб переконатися, що помилка вже виправлена.",
			"This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?": "Ця робоча область містить версію TypeScript. Хочете використовувати версію TypeScript робочої області для функцій мови TypeScript та JavaScript?",
			"This workspace wants to use the Node installation at '{0}' to run TS Server. Would you like to use it?": "Ця робоча область хоче використовувати установку Node за шляхом '{0}' для запуску TS Server. Хочете використовувати його?",
			"To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}": "Щоб увімкнути функції мови JavaScript/TypeScript для всього проекту, виключіть папки з великою кількістю файлів, наприклад: {0}.",
			"To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.": "Щоб увімкнути функції мови JavaScript/TypeScript для всього проекту, виключіть великі папки з вихідними файлами, з якими ви не працюєте.",
			"TypeScript Server Log": "Журнал сервера TypeScript",
			"TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"": "Задача TypeScript в tasks.json містить \"\\\\\". Конфігурація tsconfig задач TypeScript повинна використовувати \"/\"",
			"TypeScript Version": "Версія TypeScript",
			"TypeScript language server exited with error. Error message is: {0}": "Сервер мови TypeScript завершив роботу з помилкою. Повідомлення про помилку: {0}",
			"TypeScript: Configure Excludes": "TypeScript: Налаштувати виключення",
			"Update imports for '{0}'?": "Оновити імпорти для '{0}'?",
			"Update imports for the following {0} files?": "Оновити імпорти для наступних {0} файлів?",
			"Use VS Code's Version": "Використовувати версію VS Code",
			"Use Workspace Version": "Використовувати версію робочої області",
			"VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.": "tsserver VS Code був видалений іншим додатком, таким як некоректно працюючий інструмент виявлення вірусів. Будь ласка, перевстановіть VS Code.",
			"Yes": "Так",
			"build - {0}": "збірка - {0}",
			"destination files": "кінцеві файли",
			"invalid version": "неприпустима версія",
			"watch - {0}": "відстеження - {0}",
			"{0} (Fix all in file)": "{0} (Виправити все в файлі)",
			"{0} реалізацій": "Реалізацій: {0}",
			"{0} references": "Посилань: {0}"
		},
		"package": {
			"codeActions.refactor.extract.constant.description": "Виділити вираз у константу.",
			"codeActions.refactor.extract.constant.title": "Виділити константу",
			"codeActions.refactor.extract.function.description": "Виділити вираз у метод або функцію.",
			"codeActions.refactor.extract.function.title": "Виділити функцію",
			"codeActions.refactor.extract.interface.description": "Виділити тип у інтерфейс.",
			"codeActions.refactor.extract.interface.title": "Виділити інтерфейс",
			"codeActions.refactor.extract.type.description": "Виділити тип у псевдонім типу.",
			"codeActions.refactor.extract.type.title": "Виділити тип",
			"codeActions.refactor.move.newFile.description": "Перемістити вираз у новий файл.",
			"codeActions.refactor.move.newFile.title": "Перемістити у новий файл",
			"codeActions.refactor.rewrite.arrow.braces.description": "Додати або видалити фігурні дужки у стрілковій функції.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Перезаписати фігурні дужки",
			"codeActions.refactor.rewrite.export.description": "Перетворити між експортом за замовчуванням та іменованим експортом.",
			"codeActions.refactor.rewrite.export.title": "Перетворити експорт",
			"codeActions.refactor.rewrite.import.description": "Перетворення між іменованими імпортами та імпортами простору імен.",
			"codeActions.refactor.rewrite.import.title": "Перетворити імпорт",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Перетворити параметри на розкладений об'єкт",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Створити методи доступу get і set",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Створити методи доступу",
			"codeActions.source.organizeImports.title": "Організувати імпорт",
			"configuration.experimental.tsserver.web.typeAcquisition.enabled": "Увімкнути або вимкнути отримання пакетів через Інтернет.",
			"configuration.implicitProjectConfig.checkJs": "Увімкнути або вимкнути семантичну перевірку файлів JavaScript. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.experimentalDecorators": "Увімкнути або вимкнути параметр \"experimentalDecorators\" в файлах JavaScript, які не є частиною проекту. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.module": "Встановлює систему модуля для програми. Додаткова інформація: https://www.typescriptlang.org/tsconfig#module.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Увімкнути або вимкнути [строгі типи функцій](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) в файлах JavaScript і TypeScript, які не є частиною проекту. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.strictNullChecks": "Увімкнути або вимкнути [строгу перевірку значення NULL](https://www.typescriptlang.org/tsconfig#strictNullChecks) в файлах JavaScript і TypeScript, які не є частиною проекту. Цей параметр перевизначається файлом \"jsconfig.json\" або \"tsconfig.json\".",
			"configuration.implicitProjectConfig.target": "Встановлює цільову версію мови JavaScript для видачі JavaScript і включає оголошення бібліотеки. Додаткова інформація: https://www.typescriptlang.org/tsconfig#target.",
			"configuration.inlayHints.enumMemberValues.enabled": "Увімкнути або вимкнути вкладені підказки для значень елементів у оголошеннях перерахування:\r\n```typescript\r\n\r\nenum MyValue {\r\n\tA /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n \r\n```",
			"configuration.inlayHints.functionLikeReturnTypes.enabled": "Увімкнути або вимкнути вкладені підказки для неявних типів поверненого числа в підписах функцій:\r\n```typescript\r\n\r\nfunction foo() /* :number */ {\r\n\treturn Date.now();\r\n} \r\n \r\n```",
			"configuration.inlayHints.parameterNames.enabled": "Увімкнути або вимкнути вкладені підказки для імен параметрів:\r\n```typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n \r\n```",
			"configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName": "Приховати підказки для імен параметрів для аргументів, текст яких співпадає з іменем параметра.",
			"configuration.inlayHints.parameterTypes.enabled": "Увімкнути або вимкнути вкладені підказки для неявних типів параметрів:\r\n```typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n \r\n```",
			"configuration.inlayHints.propertyDeclarationTypes.enabled": "Увімкнути або вимкнути вкладені підказки для неявних типів у оголошеннях властивостей:\r\n```typescript\r\n\r\nclass Foo {\r\n\tprop /* :number */ = Date.now();\r\n}\r\n \r\n```",
			"configuration.inlayHints.variableTypes.enabled": "Увімкнути або вимкнути вкладені підказки для неявних типів змінних:\r\n```typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n \r\n```",
			"configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName": "Приховувати підказки типу для змінних, імена яких співпадають з іменем типу.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Цей параметр застарів. Замість нього слід використовувати \"js/ts.implicitProjectConfig.checkJs\".",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Цей параметр застарів. Замість нього слід використовувати \"js/ts.implicitProjectConfig.experimentalDecorators\".",
			"configuration.preferGoToSourceDefinition": "Дозволяє команді \"Перейти до вихідного коду\" уникати файлів оголошення типу, якщо це можливо, за допомогою активації команди \"Перейти до визначення джерела\". Це дозволяє запустити команду \"Перейти до визначення джерела\" за допомогою жесту миші.",
			"configuration.suggest.autoImports": "Увімкнути або вимкнути автоматичне запропонування імпорту.",
			"configuration.suggest.classMemberSnippets.enabled": "Увімкнути або вимкнути завершення фрагментів коду для членів класу.",
			"configuration.suggest.completeFunctionCalls": "Доповнювати функції їх параметрами.",
			"configuration.suggest.completeJSDocs": "Увімкнути або вимкнути завершення JSDoc коментарів.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Увімкнути або вимкнути відображення завершень для потенційно невизначених значень, які вставляють необов'язковий ланцюжок викликів. Вимагає включення строгих перевірок на значення NULL.",
			"configuration.suggest.includeCompletionsForImportStatements": "Увімкнути або вимкнути автоматично вставлені завершення для операторів імпорту, які введені не повністю.",
			"configuration.suggest.jsdoc.generateReturns": "Увімкнути або вимкнути створення заміток @returns для шаблонів JSDoc.",
			"configuration.suggest.names": "Увімкнути або вимкнути додавання унікальних імен з файлу до пропозицій JavaScript. Зверніть увагу, що пропозиції імен завжди вимкнені в коді JavaScript, семантика якого перевіряється за допомогою \"@ts-check\" або \"checkJs\".",
			"configuration.suggest.objectLiteralMethodSnippets.enabled": "Увімкнути або вимкнути завершення фрагментів коду для методів в об'єктних літералах.",
			"configuration.suggest.paths": "Увімкнути або вимкнути пропозиції для шляхів у виразах імпорту та викликах.",
			"configuration.surveys.enabled": "Увімкнути або вимкнути періодичні опитування, які допомагають нам покращити підтримку JavaScript та TypeScript в VS Code.",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Експериментальна функція) Увімкнути звіти про помилки на рівні всього проекту.",
			"configuration.tsserver.maxTsServerMemory": "Максимальний обсяг пам'яті (в МБ), виділяється для процесу сервера TypeScript. Щоб використовувати обмеження пам'яті понад 4 ГБ, вкажіть параметр \"#typescript.tsserver.nodePath#\" для запуску сервера TS з налаштованою установкою Node.",
			"configuration.tsserver.nodePath": "Запустіть TS Server при вибірковій установці Node. Це може бути шлях до виконуваного файлу Node або \"node\", якщо ви хочете, щоб VS Code виявив установку Node.",
			"configuration.tsserver.useSeparateSyntaxServer": "Увімкнути або вимкнути створення окремого сервера TypeScript, який може швидше реагувати на операції, пов'язані з синтаксисом, такі як обчислення скорочень або символів документа.",
			"configuration.tsserver.useSeparateSyntaxServer.deprecation": "Цей параметр застарів і замінений на \"typescript.tsserver.useSyntaxServer\".",
			"configuration.tsserver.useSyntaxServer": "Керує запуском окремого сервера TypeScript для швидкого оброблення операцій, пов'язаних з синтаксисом, таких як обчислення скорочень коду.",
			"configuration.tsserver.useSyntaxServer.always": "Використовуйте світліший сервер синтаксису для обробки всіх операцій IntelliSense. Цей сервер синтаксису може надавати IntelliSense лише для відкритих файлів.",
			"configuration.tsserver.useSyntaxServer.auto": "Створіть як повноцінний, так і легший сервер, призначений для операцій з синтаксисом. Сервер синтаксису використовується для прискорення операцій з синтаксисом та забезпечення IntelliSense під час завантаження проектів.",
			"configuration.tsserver.useSyntaxServer.never": "Не використовуйте окремий сервер синтаксису. Використовуйте один сервер для оброблення всіх операцій IntelliSense.",
			"configuration.tsserver.watchOptions": "Налаштування стратегій спостереження за файлами та каталогами.",
			"configuration.tsserver.watchOptions.fallbackPolling": "При використанні подій файлової системи цей параметр вказує стратегію опитування, яка використовується, коли система вичерпує запас власних спостерігачів файлів або не підтримує власні спостерігачі файлів.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Використовуйте динамічну чергу, де чим рідше змінюються файли, тим рідше вони перевіряються.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Перевіряти кожен файл на наявність змін кілька разів на секунду з фіксованим інтервалом.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Перевіряти кожен файл на наявність змін кілька разів на секунду, але з використанням евристики, щоб перевіряти деякі типи файлів рідше, ніж інші.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Вимкнути відкладене спостереження за каталогами. Відкладене спостереження зручно, коли одночасно може відбуватися багато змін (наприклад, зміна node_modules з запущеної установки npm), але для деяких менш поширених варіантів налаштування може знадобитися вимкнути цей прапорець.",
			"configuration.tsserver.watchOptions.watchDirectory": "Стратегія відображення всіх дерев каталогів в системах, де немає рекурсивної функції перегляду файлів.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Використовуйте динамічну чергу, де чим рідше змінюються каталоги, тим рідше вони перевіряються.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling": "Регулярно опитувати каталоги по блоках.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Перевіряти кожен каталог на наявність змін кілька разів на секунду з фіксованим інтервалом.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Спробуйте використовувати власні події операційної системи або файлової системи для змін каталогів.",
			"configuration.tsserver.watchOptions.watchFile": "Стратегія перегляду окремих файлів.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Використовуйте динамічну чергу, де чим рідше змінюються файли, тим рідше вони перевіряються.",
			"configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling": "Регулярно опитувати файли по блоках.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Перевіряти кожен файл на наявність змін кілька разів на секунду з фіксованим інтервалом.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Перевіряти кожен файл на наявність змін кілька разів на секунду, але з використанням евристики, щоб перевіряти деякі типи файлів рідше, ніж інші.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Спробуйте використовувати власні події операційної системи або файлової системи для змін файлів.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Спробуйте використовувати власні події операційної системи або файлової системи для слухання змін у каталогах, що містять файл. Цей підхід дозволяє використовувати менше спостерігачів файлів, але може бути менш точним.",
			"configuration.tsserver.web.projectWideIntellisense.enabled": "Увімкнути або вимкнути IntelliSense для всього проекту в Інтернеті. Вимагає, щоб VS Code був запущений в довіреному контексті.",
			"configuration.tsserver.web.projectWideIntellisense.suppressSemanticErrors": "Пригнічувати семантичні помилки. Це необхідно при використанні зовнішніх пакетів, оскільки їх не можна проаналізувати в Інтернеті.",
			"configuration.typescript": "TypeScript",
			"description": "Надає широку підтримку мови для JavaScript та TypeScript.",
			"displayName": "Можливості мов TypeScript та JavaScript",
			"format.indentSwitchCase": "Відступ для операторів case в конструкції switch. Вимагає використання TypeScript 5.1+ в робочій області.",
			"format.insertSpaceAfterCommaDelimiter": "Визначає метод обробки пробілів після роздільника-коми.",
			"format.insertSpaceAfterConstructor": "Визначає метод обробки пробілів після ключового слова constructor.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Визначає метод обробки пробілів після ключового слова function для анонімних функцій.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Визначає метод обробки пробілів після ключових слів в операторі управління потоком виконання.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Визначає обробку пробілів після відкриваючої та перед закриваючою порожніми фігурними дужками.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Визначає метод обробки пробілів після відкриття та перед закриттям дужок виразу JSX.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Визначає метод обробки пробілів після відкриття та перед закриттям непорожніми фігурними дужками.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Визначає метод обробки пробілів після відкриття та перед закриттям непорожніми квадратними дужками.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Визначає метод обробки пробілів після відкриття та перед закриттям непорожніми круглими дужками.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Визначає метод обробки пробілів після відкриття та перед закриттям дужок у шаблонному рядку.",
			"format.insertSpaceAfterSemicolonInForStatements": "Визначає метод обробки пробілів після крапки з комою в операторі for.",
			"format.insertSpaceAfterTypeAssertion": "Визначає метод обробки пробілів після підтвердження типу в TypeScript.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Визначає метод обробки пробілів перед та після бінарного оператора.",
			"format.insertSpaceBeforeFunctionParenthesis": "Визначає метод обробки пробілів перед дужками аргументу функції.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Визначає, чи розміщувати відкриваючу фігурну дужку на новому рядку в блоках управління.",
			"format.placeOpenBraceOnNewLineForFunctions": "Визначає, чи розміщувати відкриваючу фігурну дужку на новому рядку в функціях.",
			"format.semicolons": "Визначає обробку необов'язкових символів крапки з комою.",
			"format.semicolons.ignore": "Не вставляти та не видаляти крапки з комою.",
			"format.semicolons.insert": "Вставити коми в кінці оператора.",
			"format.semicolons.remove": "Видалити непотрібні коми.",
			"inlayHints.parameterNames.all": "Включення/виключення вказівок імен параметрів для літеральних та нелітеральних аргументів.",
			"inlayHints.parameterNames.literals": "Включення вказівок імен параметрів лише для літеральних аргументів.",
			"inlayHints.parameterNames.none": "Виключення вказівок імен параметрів.",
			"javascript.format.enable": "Включення або виключення модуля форматування JavaScript за замовчуванням.",
			"javascript.goToProjectConfig.title": "Перейти до конфігурації проекту (jsconfig / tsconfig)",
			"javascript.preferences.jsxAttributeCompletionStyle.auto": "Вставити `={}` або `=\"\"` після імені атрибута на основі типу властивості. Докладні відомості про керування типами лапок для рядкових атрибутів див. у `javascript.preferences.quoteStyle`.",
			"javascript.referencesCodeLens.enabled": "Включити/виключити посилання CodeLens для файлів JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Включити/виключити посилання CodeLens для всіх функцій у файлах JavaScript.",
			"javascript.suggestionActions.enabled": "Включення або виключення пропозицій діагностики для файлів JavaScript у редакторі.",
			"javascript.validate.enable": "Включення або виключення перевірки JavaScript.",
			"reloadProjects.title": "Перезавантажити проект",
			"taskDefinition.tsconfig.description": "Файл tsconfig, який визначає збірку TS.",
			"typescript.autoClosingTags": "Увімкнути або вимкнути автоматичне закриття тегів JSX.",
			"typescript.check.npmIsInstalled": "Перевірте, чи встановлено npm для [Автоматичного отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.disableAutomaticTypeAcquisition": "Вимикає [автоматичне отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Автоматичне отримання типів витягує пакети @типів з npm для поліпшення IntelliSense для зовнішніх бібліотек.",
			"typescript.enablePromptUseWorkspaceTsdk": "Увімкнути запити користувачам щодо використання версії TypeScript, налаштованої в робочій області для IntelliSense.",
			"typescript.findAllFileReferences": "Пошук посилань на файли",
			"typescript.format.enable": "Увімкнути або вимкнути модуль форматування TypeScript за замовчуванням.",
			"typescript.goToProjectConfig.title": "Перейти до конфігурації проекту (tsconfig)",
			"typescript.goToSourceDefinition": "Перейти до визначення джерела",
			"typescript.implementationsCodeLens.enabled": "Увімкнути або вимкнути CodeLens для реалізацій. У цьому CodeLens відображаються реалізації інтерфейсу.",
			"typescript.implementationsCodeLens.showOnInterfaceMethods": "Увімкнути або вимкнути CodeLens реалізації в методах інтерфейсу.",
			"typescript.locale": "Встановлює мовний стандарт, який використовується для повідомлень про помилки JavaScript та TypeScript. За замовчуванням використовується мовний стандарт VS Code.",
			"typescript.locale.auto": "Використовуйте налаштовану мову інтерфейсу VS Code",
			"typescript.npm": "Вказує шлях до виконуваного npm для [Автоматичного отримання типів](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
			"typescript.openTsServerLog.title": "Відкрити журнал сервера TS",
			"typescript.preferences.autoImportFileExcludePatterns": "Вкажіть загальні шаблони файлів для виключення з автоматичного імпорту. Відносні шляхи розраховуються відносно кореня робочої області. Шаблони оцінюються з використанням семантики tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude).",
			"typescript.preferences.importModuleSpecifier": "Переважаний стиль шляху для автоматичного імпорту.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Переважати невідносний імпорт на основі \"baseUrl\" або \"paths\", вказаних у файлі jsconfig.json/tsconfig.json.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Переважати неабсолютний імпорт, лише якщо шлях відносного імпорту виходить за межі каталогу пакета або проекту.",
			"typescript.preferences.importModuleSpecifier.relative": "Переважати відносний шлях до розташування імпортованого файлу.",
			"typescript.preferences.importModuleSpecifier.shortest": "Переважати неабсолютний імпорт, лише якщо доступний неабсолютний імпорт з меншою кількістю сегментів шляху, ніж відносний імпорт.",
			"typescript.preferences.importModuleSpecifierEnding": "Переважане закінчення шляху для автоматичного імпорту.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Використовуйте параметри проекту для вибору значення за замовчуванням.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Скоротити \"./component/index.js\" до \"./component/index\".",
			"typescript.preferences.importModuleSpecifierEnding.js": "Не скорочувати закінчення шляху; включити розширення `.js` або `.ts`.",
			"typescript.preferences.importModuleSpecifierEnding.label.js": ".js / .ts",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Скоротити `./component/index.js` до `./component`.",
			"typescript.preferences.includePackageJsonAutoImports": "Увімкнути або вимкнути пошук залежностей \"package.json\" для доступних операцій автоматичного імпорту.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Пошук залежностей на основі приблизного впливу на продуктивність.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Ніколи не шукати залежності.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Завжди шукати залежності.",
			"typescript.preferences.jsxAttributeCompletionStyle": "Переважаний стиль завершення атрибута JSX.",
			"typescript.preferences.jsxAttributeCompletionStyle.auto": "Вставити `={}` або `=\"\"` після імені атрибута на основі типу властивості. Докладні відомості про керування типами лапок для рядкових атрибутів див. у `typescript.preferences.quoteStyle`.",
			"typescript.preferences.jsxAttributeCompletionStyle.braces": "Вставити \"={}\" після імені атрибута.",
			"typescript.preferences.jsxAttributeCompletionStyle.none": "Вставляти лише імена атрибутів.",
			"typescript.preferences.preferTypeOnlyAutoImports": "За можливості включати ключове слово \"type\" в автоматичний імпорт. Вимагає використання TypeScript 5.3+ в робочій області.",
			"typescript.preferences.quoteStyle": "Переважаний стиль лапок для швидких виправлень.",
			"typescript.preferences.quoteStyle.auto": "Вивести тип лапок з існуючого коду",
			"typescript.preferences.quoteStyle.double": "Завжди використовувати подвійні лапки: \"",
			"typescript.preferences.quoteStyle.single": "Завжди використовувати одинарні лапки: '",
			"typescript.preferences.renameMatchingJsxTags": "При використанні тега JSX спробуйте перейменувати відповідний тег замість символу. Вимагає використання TypeScript 5.1 і новіших версій у робочій області.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Параметр typescript.preferences.renameShorthandProperties оголошено застарілим, рекомендується використовувати typescript.preferences.useAliasesForRenames",
			"typescript.preferences.useAliasesForRenames": "Увімкнення або вимкнення псевдонімів для скорочених властивостей об'єкта під час перейменувань.",
			"typescript.problemMatchers.tsc.label": "Проблеми TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Проблеми TypeScript (режим спостереження)",
			"typescript.referencesCodeLens.enabled": "Увімкнути або вимкнути посилання CodeLens для файлів TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Увімкнути або вимкнути посилання CodeLens для всіх функцій у файлах TypeScript.",
			"typescript.removeUnusedImports": "Видалити невикористані імпортовані дані",
			"typescript.reportStyleChecksAsWarnings": "Відображати помилки перевірки стилю як попередження.",
			"typescript.restartTsServer": "Перезапустити сервер TS",
			"typescript.selectTypeScriptVersion.title": "Виберіть версію TypeScript...",
			"typescript.sortImports": "Сортувати імпортовані дані",
			"typescript.suggest.enabled": "Увімкнути або вимкнути автозаповнення.",
			"typescript.suggestionActions.enabled": "Увімкнути або вимкнути пропозиції діагностики для файлів TypeScript у редакторі.",
			"typescript.tsc.autoDetect": "Керує автоматичним виявленням завдань tsc.",
			"typescript.tsc.autoDetect.build": "Створювати лише завдання компіляції для одноразового запуску.",
			"typescript.tsc.autoDetect.off": "Вимкнути цю функцію.",
			"typescript.tsc.autoDetect.on": "Створювати завдання збірки та перегляду.",
			"typescript.tsc.autoDetect.watch": "Створювати лише завдання компіляції та перегляду.",
			"typescript.tsdk.desc": "Вказує шлях до файлів \"tsserver\" та \"lib*.d.ts\" встановлення TypeScript, яке використовується для IntelliSense, наприклад: ./node_modules/typescript/lib.\r\n\r\n— При вказуванні як користувацького параметра версія TypeScript з файлу typescript.tsdk автоматично замінює вбудовану версію TypeScript.\r\n— При вказуванні як параметра робочої області typescript.tsdk дозволяє переключитися на використання цієї версії робочої області TypeScript для IntelliSense за допомогою команди \"TypeScript: виберіть версію TypeScript\".\r\n\r\nДодаткові відомості про керування версіями TypeScript див. у [документації по TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions).",
			"typescript.tsserver.enableTracing": "Увімкнути трасування продуктивності сервера TS в каталог. Ці файли трасування можна використовувати для діагностики проблем з продуктивністю сервера TS. Журнал може містити шляхи до файлів, вихідний код та інші відомості з вашого проекту, включаючи конфіденційні дані.",
			"typescript.tsserver.log": "Увімкнути ведення журналу для сервера TS. Цей журнал можна використовувати для діагностики проблем сервера TS. Журнал може містити шляхи до файлів, вихідний код та інші відомості з вашого проекту, включаючи конфіденційні дані.",
			"typescript.tsserver.pluginPaths": "Додаткові шляхи для виявлення підключених модулів мовної служби TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Абсолютний або відносний шлях. Відносний шлях повинен бути вказаний відносно папок робочої області.",
			"typescript.tsserver.trace": "Увімкнути трасування повідомлень, що надсилаються на сервер TS. Це трасування можна використовувати для діагностики проблем сервера TS. Трасування може містити шляхи до файлів, вихідний код та інші відомості з вашого проекту, включаючи конфіденційні дані.",
			"typescript.updateImportsOnFileMove.enabled": "Увімкнути або вимкнути автоматичне оновлення шляхів імпорту при перейменуванні або переміщенні файлу в VS Code.",
			"typescript.updateImportsOnFileMove.enabled.always": "Завжди автоматично оновлювати шляхи.",
			"typescript.updateImportsOnFileMove.enabled.never": "Ніколи не перейменовувати шляхи та не видаляти запит на перейменування.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Видача запиту при кожному перейменуванні.",
			"typescript.validate.enable": "Увімкнути або вимкнути перевірку TypeScript.",
			"typescript.workspaceSymbols.excludeLibrarySymbols": "Виключити символи з файлів бібліотеки у результатах \"Перейти до символу в робочій області\". Вимагає використання TypeScript 5.3+ в робочій області.",
			"typescript.workspaceSymbols.scope": "Визначає, які файли шукати при [переході до символу в робочій області](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Пошук символів у всіх відкритих проектах JavaScript або TypeScript.",
			"typescript.workspaceSymbols.scope.currentProject": "Пошук символів тільки в поточному проекті JavaScript або TypeScript.",
			"virtualWorkspaces": "У віртуальних робочих областях розрішення та пошук посилань у файлах не підтримується.",
			"walkthroughs.nodejsWelcome.debugJsFile.altText": "Виконуйте налагодження та запуск коду JavaScript у Node.js за допомогою Visual Studio Code.",
			"walkthroughs.nodejsWelcome.debugJsFile.description": "Після встановлення Node.js ви можете запустити програми JavaScript у терміналі, введенням \"node your-file-name.js\"\r\nЩе один простий спосіб запуску програм Node.js - використання відлагоджувача VS Code, який дозволяє запускати код, призупиняти його в різних точках та надає поетапні інструкції для полегшення розуміння того, що відбувається.\r\n[Почати налагодження](command:javascript-walkthrough.commands.debugJsFile)",
			"walkthroughs.nodejsWelcome.debugJsFile.title": "Запуск та налагодження JavaScript",
			"walkthroughs.nodejsWelcome.description": "Використовуйте всі чудові можливості JavaScript у Visual Studio Code.",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.description": "Node.js - це простий спосіб запуску коду JavaScript. З його допомогою можна швидко створювати командні рядки та сервери. Він також містить менеджер пакетів npm, який спрощує повторне використання та спільне застосування коду JavaScript.\r\n[Встановити Node.js](https://nodejs.org/en/download/package-manager/)",
			"walkthroughs.nodejsWelcome.downloadNode.forLinux.title": "Встановити Node.js",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description": "Node.js - це простий спосіб запуску коду JavaScript. З його допомогою можна швидко створювати командні рядки та сервери. Він також містить менеджер пакетів npm, який спрощує повторне використання та спільне застосування коду JavaScript.\r\n[Встановити Node.js](https://nodejs.org/en/download/)",
			"walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title": "Встановити Node.js",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.altText": "Додаткові відомості про JavaScript та Node.js у Visual Studio Code.",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.description": "Бажаєте докладніше ознайомитися з JavaScript, Node.js та VS Code? Ознайомтесь з нашою документацією!\r\nУ нас є багато ресурсів для вивчення [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) та [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\r\n\r\n[Докладніше](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
			"walkthroughs.nodejsWelcome.learnMoreAboutJs.title": "Інші можливості",
			"walkthroughs.nodejsWelcome.makeJsFile.description": "Давайте створимо перший файл JavaScript. Потрібно створити новий файл і зберегти його з розширенням \".js\" в кінці імені файлу.\r\n[Створити файл JavaScript](command:javascript-walkthrough.commands.createJsFile)",
			"walkthroughs.nodejsWelcome.makeJsFile.title": "Створити файл JavaScript",
			"walkthroughs.nodejsWelcome.title": "Початок роботи з JavaScript та Node.js",
			"workspaceTrust": "Розширення потребує довіри до робочої області, коли використовується версія робочої області, оскільки вона виконує код, вказаний робочою областю."
		}
	}
}